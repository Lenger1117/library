# Generated by Django 3.2.25 on 2024-12-16 16:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Имя автора')),
                ('slug', models.SlugField(blank=True, default='', max_length=200, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='AuthorBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='books.author', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Автор-Книга',
                'verbose_name_plural': 'Авторы-Книга',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название книги')),
                ('description', models.TextField(verbose_name='Описание')),
                ('year_of_issue', models.IntegerField(validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(2024)], verbose_name='Год выпуска')),
                ('availability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Наличие в библиотеке')),
                ('image', models.ImageField(blank=True, null=True, upload_to='books/image/', verbose_name='Изображение')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата поступления в библиотеку')),
                ('authors', models.ManyToManyField(blank=True, null=True, through='books.AuthorBook', to='books.Author', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Книги',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название жанра')),
                ('color', models.CharField(max_length=7, verbose_name='Цвет')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='GenreBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.book', verbose_name='Книга')),
                ('genre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Жанр-Книга',
                'verbose_name_plural': 'Жанры-Книга',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(blank=True, through='books.GenreBook', to='books.Genre', verbose_name='Жанры'),
        ),
        migrations.AddField(
            model_name='authorbook',
            name='book',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.book', verbose_name='Книга'),
        ),
        migrations.AddConstraint(
            model_name='genrebook',
            constraint=models.UniqueConstraint(fields=('book', 'genre'), name='book_genre_unique'),
        ),
        migrations.AddConstraint(
            model_name='authorbook',
            constraint=models.UniqueConstraint(fields=('book', 'author'), name='book_author_unique'),
        ),
    ]
